<?xml version="1.0" encoding="UTF-8"?>
<!--
~  Copyright (c) 2016, WSO2 Inc. (http://wso2.com) All Rights Reserved.
~
~  WSO2 Inc. licenses this file to you under the Apache License,
~  Version 2.0 (the "License"); you may not use this file except
~  in compliance with the License.
~  You may obtain a copy of the License at
~
~   http://www.apache.org/licenses/LICENSE-2.0
~
~  Unless required by applicable law or agreed to in writing,
~  software distributed under the License is distributed on an
~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~  KIND, either express or implied.  See the License for the
~  specific language governing permissions and limitations
~  under the License.
-->
<!-- API Doc: https://developer.pagerduty.com/documentation/rest/incidents/list -->
<template name="listIncidents" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="since" description="The start of the date range to search."/>
    <parameter name="until" description="The end of the date range to search."/>
    <parameter name="dateRange" description="The parameter to get all request from begining by setting value to all."/>
    <parameter name="fields" description="The properties to be returned for each incident."/>
    <parameter name="status"
               description="The status of incidents to list. Valid types are triggered, acknowledged and resolved."/>
    <parameter name="incidentKey" description="The incident key value to search incidents."/>
    <parameter name="service" description="The service identifier to list incidents for that service."/>
    <parameter name="assignedToUser" description="The user identifier to list incidents assigned to that user."/>
    <parameter name="timeZone" description="The time zone to retrive correnspoding incidents."/>
    <parameter name="sortBy" description="The sorting field with the ascending or descending order."/>
    <parameter name="limit" description="The number of records to be returned."/>
    <parameter name="offset" description="The offset of the first record returned."/>
    <sequence>
        <property name="uri.var.since" expression="$func:since"/>
        <property name="uri.var.until" expression="$func:until"/>
        <property name="uri.var.dateRange" expression="$func:dateRange"/>
        <property name="uri.var.fields" expression="$func:fields"/>
        <property name="uri.var.status" expression="$func:status"/>
        <property name="uri.var.incidentKey" expression="$func:incidentKey"/>
        <property name="uri.var.service" expression="$func:service"/>
        <property name="uri.var.assignedToUser" expression="$func:assignedToUser"/>
        <property name="uri.var.timeZone" expression="$func:timeZone"/>
        <property name="uri.var.sortBy" expression="$func:sortBy"/>
        <property name="uri.var.limit" expression="$func:limit"/>
        <property name="uri.var.offset" expression="$func:offset"/>
        <property name="uri.var.urlQuery" value=""/>
        <script language="js">
            <![CDATA[
            var since = mc.getProperty('uri.var.since');
            var until = mc.getProperty('uri.var.until');
            var dateRange = mc.getProperty('uri.var.dateRange');
            var fields = mc.getProperty('uri.var.fields');
            var status = mc.getProperty('uri.var.status');
            var incidentKey = mc.getProperty('uri.var.incidentKey');
            var service = mc.getProperty('uri.var.service');
            var assignedToUser = mc.getProperty('uri.var.assignedToUser');
            var timeZone = mc.getProperty('uri.var.timeZone');
            var sortBy = mc.getProperty('uri.var.sortBy');
            var limit = mc.getProperty('uri.var.limit');
            var offset = mc.getProperty('uri.var.offset');
            var urlQuery = "";
            if (since != null && since != "") {
               urlQuery += "since=" + encodeURI(since) + '&';
            }
            if (until != null && until != "") {
               urlQuery += "until=" + encodeURI(until) + '&';
            }
            if (dateRange != null && dateRange != "") {
               urlQuery += "date_range=" + dateRange + '&';
            }
            if (fields != null && fields != "") {
               urlQuery += "fields=" + fields + '&';
            }
            if (status != null && status != "") {
               urlQuery += "status=" + status + '&';
            }
            if (incidentKey != null && incidentKey != "") {
               urlQuery += "incident_key=" + encodeURI(incidentKey) + '&';
            }
            if (service != null && service != "") {
               urlQuery += "service=" + service + '&';
            }
            if (assignedToUser != null && assignedToUser != "") {
               urlQuery += "assigned_to_user=" + assignedToUser + '&';
            }
            if (timeZone != null && timeZone != "") {
               urlQuery += "time_zone=" + encodeURI(timeZone) + '&';
            }
            if (sortBy != null && sortBy != "") {
               urlQuery += "sort_by=" + sortBy + '&';
            }
            if (limit != null && limit != "") {
               urlQuery += "limit=" + limit + '&';
            }
            if (offset != null && offset != "") {
               urlQuery += "offset=" + offset + '&';
            }
            if (urlQuery != "") {
               urlQuery = '?' + urlQuery.toString().substring(0, urlQuery.toString().lastIndexOf("&"));
               mc.setProperty('uri.var.urlQuery', urlQuery);
            }
         ]]>
        </script>
        <call>
            <endpoint>
                <http method="get" uri-template="{uri.var.apiUrl}/incidents{+uri.var.urlQuery}"/>
            </endpoint>
        </call>
        <header name="X-Request-Id" scope="transport" action="remove"/>
        <header name="X-UA-Compatible" scope="transport" action="remove"/>
        <header name="Status" scope="transport" action="remove"/>
        <header name="ETag" scope="transport" action="remove"/>
        <header name="Access-Control-Allow-Headers" scope="transport" action="remove"/>
        <header name="Access-Control-Max-Age" scope="transport" action="remove"/>
        <header name="Access-Control-Allow-Methods" scope="transport" action="remove"/>
        <header name="WWW-Authenticate" scope="transport" action="remove"/>
    </sequence>
</template>
